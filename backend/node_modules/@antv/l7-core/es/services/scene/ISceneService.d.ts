import { ISceneConfig } from '../config/IConfigService';
import { ILayer } from '../layer/ILayerService';
import EventEmitter from 'eventemitter3';
export interface ISceneService extends EventEmitter {
    destroyed: boolean;
    loaded: boolean;
    removeAllListeners(event?: string): this;
    init(config: ISceneConfig): void;
    initMiniScene(config: ISceneConfig): void;
    addLayer(layer: ILayer): void;
    addMask(mask: ILayer): void;
    getSceneConfig(): Partial<ISceneConfig>;
    getPointSizeRange(): Float32Array;
    render(): void;
    getSceneContainer(): HTMLDivElement;
    getMarkerContainer(): HTMLElement;
    exportPng(type?: 'png' | 'jpg'): string;
    addFontFace(fontname: string, fontpath: string): void;
    destroy(): void;
}
export declare const SceneEventList: string[];
