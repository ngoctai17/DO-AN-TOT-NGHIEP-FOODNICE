"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _l7Core = require("@antv/l7-core");

var _l7Utils = require("@antv/l7-utils");

var TextureService = /*#__PURE__*/function () {
  function TextureService(layer) {
    (0, _classCallCheck2.default)(this, TextureService);
    this.layer = layer;
    var container = this.layer.getContainer();
    this.rendererService = container.get(_l7Core.TYPES.IRendererService);
  }

  (0, _createClass2.default)(TextureService, [{
    key: "getColorTexture",
    value: function getColorTexture(colorRamp) {
      // TODO 支持传入图片
      var currentkey = this.getTextureKey(colorRamp);

      if (this.key === currentkey) {
        return this.colorTexture;
      } else {
        this.createColorTexture(colorRamp);
      }

      this.key = currentkey;
      return this.colorTexture;
    }
  }, {
    key: "createColorTexture",
    value: function createColorTexture(colorRamp) {
      var createTexture2D = this.rendererService.createTexture2D;
      var imageData = (0, _l7Utils.generateColorRamp)(colorRamp);
      var texture = createTexture2D({
        data: imageData.data,
        width: imageData.width,
        height: imageData.height,
        flipY: false
      });
      this.colorTexture = texture;
      return texture;
    }
  }, {
    key: "setColorTexture",
    value: function setColorTexture(texture, colorRamp) {
      this.key = this.getTextureKey(colorRamp);
      this.colorTexture = texture;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var _this$colorTexture;

      (_this$colorTexture = this.colorTexture) === null || _this$colorTexture === void 0 ? void 0 : _this$colorTexture.destroy();
    }
  }, {
    key: "getTextureKey",
    value: function getTextureKey(colorRamp) {
      return "".concat(colorRamp.colors.join('_'), "_").concat(colorRamp.positions.join('_'));
    }
  }]);
  return TextureService;
}();

exports.default = TextureService;